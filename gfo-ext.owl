Prefix(:=<http://www.onto-med.de/ontologies/gfo-ext#>)
Prefix(gfo:=<http://www.onto-med.de/ontologies/gfo.owl#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)
Prefix(gfo-ext:=<http://www.onto-med.de/ontologies/gfo-ext#>)


Ontology(<http://www.onto-med.de/ontologies/gfo-ext>
Import(<http://www.onto-med.de/ontologies/gfo.owl>)

Declaration(Class(gfo-ext:Attributive))
Declaration(Class(gfo-ext:Disposition))
Declaration(Class(gfo-ext:Quality))
Declaration(ObjectProperty(gfo-ext:bears))
Declaration(ObjectProperty(gfo-ext:borne_by))
Declaration(ObjectProperty(gfo-ext:captures))
Declaration(AnnotationProperty(gfo-ext:issue))
Declaration(AnnotationProperty(gfo-ext:question))

############################
#   Object Properties
############################

# Object Property: gfo-ext:bears (gfo-ext:bears)

InverseObjectProperties(gfo-ext:bears gfo-ext:borne_by)
ObjectPropertyDomain(gfo-ext:bears ObjectUnionOf(gfo-ext:Attributive gfo:Material_object gfo:Process))
ObjectPropertyRange(gfo-ext:bears gfo-ext:Attributive)

# Object Property: gfo-ext:borne_by (gfo-ext:borne_by)

SubObjectPropertyOf(gfo-ext:borne_by gfo:depends_on)

# Object Property: gfo-ext:captures (gfo-ext:captures)

SubObjectPropertyOf(gfo-ext:captures gfo:depends_on)



############################
#   Classes
############################

# Class: gfo-ext:Attributive (gfo-ext:Attributive)

AnnotationAssertion(gfo-ext:question gfo-ext:Attributive "Another subclass of Attributve is (according to the gfo-data paper, page 3, paragraph 3) \"structural feature\". Do structural features have a corresponding entity in gfo.owl? Is MaterialStructure what we are looking for?"@en)
AnnotationAssertion(gfo-ext:question gfo-ext:Attributive "The gfo-data paper introduces Attributives as fundamental entities, but they do not seem to have made it into the owl ontology (yet). Why?"@en)
SubClassOf(gfo-ext:Attributive gfo:Individual)
SubClassOf(gfo-ext:Attributive ObjectSomeValuesFrom(gfo-ext:borne_by gfo:Individual))

# Class: gfo-ext:Disposition (gfo-ext:Disposition)

AnnotationAssertion(gfo-ext:question gfo-ext:Disposition "Mentioned in papers, but not part of the ontology. Why?"@en)
SubClassOf(gfo-ext:Disposition gfo-ext:Attributive)

# Class: gfo-ext:Quality (gfo-ext:Quality)

SubClassOf(gfo-ext:Quality gfo-ext:Attributive)

# Class: gfo:Concept (gfo:Concept)

EquivalentClasses(gfo:Concept ObjectExactCardinality(1 gfo-ext:captures gfo:Universal))

# Class: gfo:Relator (gfo:Relator)

SubClassOf(gfo:Relator gfo-ext:Attributive)

# Class: gfo:Role (gfo:Role)

SubClassOf(gfo:Role gfo-ext:Attributive)

# Class: gfo:Symbol_structure (gfo:Symbol_structure)

EquivalentClasses(gfo:Symbol_structure ObjectSomeValuesFrom(gfo:has_token gfo:Concrete))


AnnotationAssertion(gfo-ext:question gfo:Function "The comment says that \"a function F is a universal\", but functions are concepts, and the class of Concepts is disjoint with the class of Universals."@en)
AnnotationAssertion(rdfs:comment gfo:Function "This is about intention and goals."@en)
)